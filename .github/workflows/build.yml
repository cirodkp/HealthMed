name: Build Tests and Deploy app

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Build & Run containers para integração
        run: docker-compose -f docker-compose.yaml up -d --build

      - name: Aguardar APIs estarem disponíveis
        run: |
          endpoints=("http://localhost:8081/health" "http://localhost:8083/health" "http://localhost:8084/health" "http://localhost:8085/health")
          for url in "${endpoints[@]}"; do
            echo "Esperando $url ficar disponível..."
            for i in {1..15}; do
              if curl -s $url | grep -iq "healthy"; then
                echo "$url está pronto!"
                break
              fi
              echo "Aguardando $url..."
              sleep 5
            done
          done

      - name: Restore
        run: dotnet restore ./HealthMed.sln

      - name: Build
        run: dotnet build ./HealthMed.sln --configuration Release --no-restore

      - name: Test
        run: dotnet test ./HealthMed.sln --configuration Release --no-restore --no-build --collect:"XPlat Code Coverage" --logger trx --results-directory coverage

      - name: Code Coverage Summary Report
        uses: irongut/CodeCoverageSummary@v1.3.0
        with:
          filename: 'coverage/*/coverage.cobertura.xml'
          badge: true
          format: 'markdown'
          output: 'both'

      - name: Add Coverage PR Comment
        uses: marocchino/sticky-pull-request-comment@v2
        if: github.event_name == 'pull_request'
        with:
          recreate: true
          path: code-coverage-results.md

      - name: Write to Job Summary
        run: cat code-coverage-results.md >> $GITHUB_STEP_SUMMARY
